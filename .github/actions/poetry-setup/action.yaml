---
name: Setup env
description: Create & configure a Python environment
inputs:
  python-version:
    description: Version range or exact version of a Python version, using SemVer's version range syntax
    required: false
    default: "3.x"
  os:
    description: The operating system for the environment
    required: false
    default: Linux

runs:
  using: composite
  steps:

    - shell: bash
      run: echo Set environment for python ${{ inputs.python-version }} in ${{ inputs.os }}

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ inputs.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Update pip to latest version
      shell: bash
      run: python -m pip install --upgrade pip

    - name: Install poetry
      shell: bash
      run: |
        curl -sL -o poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py
        python poetry.py -y

    - name: Update PATH
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Update Path for Windows
      if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

    - name: Configure poetry
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Install poetry dependencies
      shell: bash
      run: poetry install --no-interaction

    - name: Install tox
      shell: bash
      run: python -m pip install tox
